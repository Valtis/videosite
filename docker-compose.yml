services:
  proxy:
    image: nginx:latest
    ports:
      - 8080:80
    volumes:
      - ./dev-services/proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: on-failure
  frontend:
    build: 
      context: frontend
      dockerfile: Dockerfile
    restart: on-failure
  auth:
    build: 
      context: auth
      dockerfile: Dockerfile
    environment:
      - SIGNING_KEY=supersecretkeysupersecretkeysupersecretkey 
      - ISSUER=http://localhost:8080
      - AUDIENCE=http://localhost:8080
      - DATABASE_URL=postgres://root:root@postgresql:5432/user_db
    restart: on-failure
  ingestion:
    build: 
      context: . # Build context is the root of the project because we pull the libs directory
      dockerfile: ingestion/Dockerfile
    environment:
      - DATABASE_URL=postgres://root:root@postgresql:5432/ingestion_db
      - AUTH_SERVICE_URL=http://auth:3000
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ENDPOINT_URL_S3=http://localstack:4566
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=keyid
      - AWS_SECRET_ACCESS_KEY=supersecretkey
      - USE_PATH_STYLE_BUCKETS=true
      - UPLOAD_QUEUE_URL=http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/upload-finished-queue
      - RESOURCE_STATUS_QUEUE_URL=http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/resource-status-queue
    restart: on-failure
  virus-scan:
    build: 
      context: virus-scan
      dockerfile: Dockerfile
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=keyid
      - AWS_SECRET_ACCESS_KEY=supersecretkey
      - UPLOAD_QUEUE_URL=http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/upload-finished-queue
      - VIRUS_SCAN_QUEUE_URL=http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/virus-scan-clear-queue
      - SCAN_MAX_SIZE_MEGABYTES=200
    depends_on:
      - localstack
    restart: on-failure
  metadata:
    build: 
      context: metadata
      dockerfile: Dockerfile
    environment:
      - AUTH_SERVICE_URL=http://auth:3000
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=keyid
      - AWS_SECRET_ACCESS_KEY=supersecretkey
      - USE_PATH_STYLE_BUCKETS=true
      - VIRUS_SCAN_QUEUE_URL=http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/virus-scan-clear-queue
      - VIDEO_PROCESSING_QUEUE_URL=http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/video-processing-queue
      - AUDIO_PROCESSING_QUEUE_URL=http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/audio-processing-queue
      - IMAGE_PROCESSING_QUEUE_URL=http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/image-processing-queue
      - METADATA_QUEUE_URL=http://sqs.us-east-
    depends_on:
      - localstack
    restart: on-failure
  video-transcoding:
    build: 
      context: video-transcoding
      dockerfile: Dockerfile
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ENDPOINT_URL_S3=http://localstack:4566
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=keyid
      - AWS_SECRET_ACCESS_KEY=supersecretkey
      - USE_PATH_STYLE_BUCKETS=true
      - VIDEO_PROCESSING_QUEUE_URL=http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/video-processing-queue
    depends_on:
      - localstack
    restart: on-failure
  resource-server:
    build: 
      context: resource-server
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgres://root:root@postgresql:5432/resource_db
      - AUTH_SERVICE_URL=http://auth:3000
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ENDPOINT_URL_S3=http://localstack:4566
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=keyid
      - AWS_SECRET_ACCESS_KEY=supersecretkey
      - USE_PATH_STYLE_BUCKETS=true
      - RESOURCE_STATUS_QUEUE_URL=http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/resource-status-queue
    depends_on:
      - localstack
    restart: on-failure
  postgresql:
    image: postgres:17.5
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    volumes:
      - ./init_db.sql:/docker-entrypoint-initdb.d/0001_init_db.sql
    ports:
      - 54320:5432
    restart: on-failure
  localstack:
    image: localstack/localstack
    ports:
      - "4566:4566"
    environment:
      - AWS_ACCESS_KEY_ID=keyid 
      - AWS_SECRET_ACCESS_KEY=supersecretkey
      - SERVICES=s3,sqs,eventbridge
    volumes:
      - ./dev-services/localstack/:/etc/localstack/init/ready.d/
    restart: on-failure
  
    


